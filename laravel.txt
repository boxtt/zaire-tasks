Application
	basePath   =  'E:\blog';
	hasBeenBootstrapped = false;
	booted = false;
	bootingCallbacks = [];
	bootedCallbacks = [];
	terminatingCallbacks = [];
	serviceProviders = [
		Illuminate\Events\EventServiceProvider,
		Illuminate\Log\LogServiceProvider,
		Illuminate\Routing\RoutingServiceProvider,
	];
	loadedProviders = [
		Illuminate\Events\EventServiceProvider => true,
		Illuminate\Log\LogServiceProvider => true,
		Illuminate\Routing\RoutingServiceProvider => true,
	];
	deferredServices = [];
	monologConfigurator
	databasePath
	storagePath
	environmentPath
	environmentFile = '.env';
	namespace
	


container
	instance
	resolved = [];
	bindings = [
		events => [],
		log=> [],
		router=>[],
		url=>[],
		redirect=>[],
		Psr\Http\Message\ServerRequestInterface=>[],
		Psr\Http\Message\ResponseInterface=>[],
		Illuminate\Contracts\Routing\ResponseFactory=>[],
		Illuminate\Contracts\Http\Kernel => [],
		Illuminate\Contracts\Console\Kernel => [],
		Illuminate\Contracts\Debug\ExceptionHandler => []
	];
	methodBindings = [];
	instances = [
		path => E:\blog\app,
		path.base => E:\blog,
		path.lang=> E:\blog\resources\lang,
		path.config=> E:\blog\config,
		path.public=> E:\blog\public,
		path.storage=> E:\blog\storage,
		path.database=> E:\blog\database,
		path.resources=> E:\blog\resources,
		path.bootstrap=> E:\blog\bootstrap,
		app=>this,
		Illuminate\Container\Container => this
	];
	aliases = [
		Illuminate\Foundation\Application => app
		Illuminate\Contracts\Container\Container => app
		Illuminate\Contracts\Foundation\Application=>app
		Illuminate\Auth\AuthManager=>auth
		Illuminate\Contracts\Auth\Factory=>auth
		Illuminate\Contracts\Auth\Guard=>auth.driver
		Illuminate\View\Compilers\BladeCompiler=>blade.compiler
		Illuminate\Cache\CacheManager=>cache
		Illuminate\Contracts\Cache\Factory=>cache
		Illuminate\Cache\Repository=>cache.store
		Illuminate\Contracts\Cache\Repository=>cache.store
		Illuminate\Config\Repository=>config
		Illuminate\Contracts\Config\Repository=>config
		Illuminate\Cookie\CookieJar=>cookie
		Illuminate\Contracts\Cookie\Factory=>cookie
		Illuminate\Contracts\Cookie\QueueingFactory=>cookie
		Illuminate\Encryption\Encrypter=>encrypter
		Illuminate\Contracts\Encryption\Encrypter=>encrypter
		Illuminate\Database\DatabaseManager=>db
		Illuminate\Database\Connection=>db.connection
		Illuminate\Database\ConnectionInterface=>db.connection
		Illuminate\Events\Dispatcher=>events
		Illuminate\Contracts\Events\Dispatcher=>events
		Illuminate\Filesystem\Filesystem=>files
		Illuminate\Filesystem\FilesystemManager=>filesystem
		Illuminate\Contracts\Filesystem\Factory=>filesystem
		Illuminate\Contracts\Filesystem\Filesystem=>filesystem.disk
		Illuminate\Contracts\Filesystem\Cloud=>filesystem.cloud
		Illuminate\Contracts\Hashing\Hasher=>hash
		Illuminate\Translation\Translator=>translator
		Illuminate\Contracts\Translation\Translator=>translator
		Illuminate\Log\Writer=>log
		Illuminate\Contracts\Logging\Log=>log
		Psr\Log\LoggerInterface=>log
		Illuminate\Mail\Mailer=>mailer
		Illuminate\Contracts\Mail\Mailer=>mailer
		Illuminate\Contracts\Mail\MailQueue=>mailer
		Illuminate\Auth\Passwords\PasswordBrokerManager=>auth.password
		Illuminate\Contracts\Auth\PasswordBrokerFactory=>auth.password
		Illuminate\Auth\Passwords\PasswordBroker=>auth.password.broker
		Illuminate\Contracts\Auth\PasswordBroker=>auth.password.broker
		Illuminate\Queue\QueueManager=>queue
		Illuminate\Contracts\Queue\Factory=>queue
		Illuminate\Contracts\Queue\Monitor=>queue
		Illuminate\Contracts\Queue\Queue=>queue.connection
		Illuminate\Queue\Failed\FailedJobProviderInterface=>queue.failer
		Illuminate\Routing\Redirector=>redirect
		Illuminate\Redis\RedisManager=>redis
		Illuminate\Contracts\Redis\Factory=>redis
		Illuminate\Http\Request=>request
		Symfony\Component\HttpFoundation\Request=>request
		Illuminate\Routing\Router=>router
		Illuminate\Contracts\Routing\Registrar=>router
		Illuminate\Contracts\Routing\BindingRegistrar=>router
		Illuminate\Session\SessionManager=>session
		Illuminate\Session\Store=>session.store
		Illuminate\Contracts\Session\Session=>session.store
		Illuminate\Routing\UrlGenerator=>url
		Illuminate\Contracts\Routing\UrlGenerator=>url
		Illuminate\Validation\Factory=>validator
		Illuminate\Contracts\Validation\Factory=>validator
		Illuminate\View\Factory=>view
		Illuminate\Contracts\View\Factory=>view
	];
	abstractAliases = [
		app=>[
			Illuminate\Foundation\Application
			Illuminate\Contracts\Container\Container
			Illuminate\Contracts\Foundation\Application
		],
		auth=>[
			Illuminate\Auth\AuthManager
			Illuminate\Contracts\Auth\Factory
		],
		auth.driver=>[
			Illuminate\Contracts\Auth\Guard
		],
		blade.compiler=>[
			Illuminate\View\Compilers\BladeCompiler
		],
		cache=>[
			Illuminate\Cache\CacheManager
			Illuminate\Contracts\Cache\Factory
		],
		cache.store=>[
			Illuminate\Cache\Repository
			Illuminate\Contracts\Cache\Repository
		],
		config=>[
			Illuminate\Config\Repository
			Illuminate\Contracts\Config\Repository
		],
		cookie=>[
			Illuminate\Cookie\CookieJar
			Illuminate\Contracts\Cookie\Factory
			Illuminate\Contracts\Cookie\QueueingFactory
		],
		encrypter=>[
			Illuminate\Encryption\Encrypter
			Illuminate\Contracts\Encryption\Encrypter
		],
		db=>[
			Illuminate\Database\DatabaseManager
		],
		db.connection=>[
			Illuminate\Database\Connection
			Illuminate\Database\ConnectionInterface
		],
		events=>[
			Illuminate\Events\Dispatcher
			Illuminate\Contracts\Events\Dispatcher
		],
		files=>[
			Illuminate\Filesystem\Filesystem
		],
		filesystem=>[
			Illuminate\Filesystem\FilesystemManager
			Illuminate\Filesystem\Filesystem
		],
		filesystem.disk=>[
			Illuminate\Contracts\Filesystem\Filesystem
		],
		filesystem.cloud=>[
			Illuminate\Contracts\Filesystem\Cloud
		],
		hash=>[
			Illuminate\Contracts\Hashing\Hasher
		],
		translator=>[
			Illuminate\Translation\Translator
			Illuminate\Contracts\Translation\Translator
		],
		log=>[
			Illuminate\Log\Writer
			Psr\Log\LoggerInterface
			Illuminate\Contracts\Translation\Translator
		],
		mailer=>[
			Illuminate\Mail\Mailer
			Illuminate\Contracts\Mail\Mailer
			Illuminate\Contracts\Mail\MailQueue
		],
		auth.password=>[
			Illuminate\Auth\Passwords\PasswordBrokerManager
			Illuminate\Contracts\Auth\PasswordBrokerFactory
		],
		auth.password.broker=>[
			Illuminate\Auth\Passwords\PasswordBroker
			Illuminate\Contracts\Auth\PasswordBroker
		],
		queue=>[
			Illuminate\Queue\QueueManager
			Illuminate\Contracts\Queue\Monitor
			Illuminate\Contracts\Auth\PasswordBroker
		],
		queue.connection=>[
			Illuminate\Contracts\Queue\Queue
		],
		queue.failer=>[
			Illuminate\Queue\Failed\FailedJobProviderInterface
		],
		redirect=>[
			Illuminate\Routing\Redirector
		],
		redis=>[
			Illuminate\Contracts\Redis\Factory
			Illuminate\Routing\Redirector
		],
		request=>[
			Illuminate\Http\Request
			Symfony\Component\HttpFoundation\Request
		],
		router=>[
			Illuminate\Routing\Router
			Illuminate\Contracts\Routing\Registrar
			Illuminate\Contracts\Routing\BindingRegistrar
		],
		session=>[
			Illuminate\Session\SessionManager
		],
		session.store=>[
			Illuminate\Session\Store
			Illuminate\Contracts\Session\Session
		],
		url=>[
			Illuminate\Routing\UrlGenerator
			Illuminate\Contracts\Routing\UrlGenerator
		],
		validator=>[
			Illuminate\Validation\Factory
			Illuminate\Contracts\Validation\Factory
		],
		view=>[
			Illuminate\View\Factory
			Illuminate\Contracts\View\Factory
		],
	];
	extenders = [];
	tags = [];
	buildStack = [];
	with = [];
	contextual = [];
	reboundCallbacks = [];
	globalResolvingCallbacks = [];
	globalAfterResolvingCallbacks = [];
	resolvingCallbacks = [];
	afterResolvingCallbacks = [];




